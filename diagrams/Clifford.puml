@startuml Clifford

interface FileSystem {
    + delete()
    + getName()
    + getSelf()
}

class Directory implements FileSystem {
    - name
    - children : List<FileSystem>
    //FS methods
    + getChildren()
    + rmChild()
    + addChild()

    }
class File implements FileSystem {
    - name
    //FS methods
    }

interface Command {
    void run(flags, args);
}
class cd implements Command {
    void run(flags);
}
class ls implements Command {
    void run(flags);
}
class touch implements Command {
    void run(flags);
}
class mkdir implements Command {
    void run(flags);
}
class rm implements Command {
    void run(flags);
}
class pwd implements Command {
    void run(flags);
}
class Cli {
    + runCommand(Command command)
}

Command <- Cli : uses






@enduml